namespace Nttb.Domain.Old;

/// <summary>
///     Describes the author of an event in a set.
/// </summary>
/// <param name="UserId">The user (or rather user account) that authored the event</param>
/// <param name="Session">
///     used to identify the source without requiring personal information about the user, author or device. It can be
///     used to distinguish the various devices (and apps) that a user might have.
/// </param>
/// <param name="Application">
///     (not to be trusted) The application that authored the event, mostly for diagnostic purposes and to optionally
///     promote other clients.
/// </param>
/// <param name="Device">
///     (not to be trusted) The device that authored the event, can be used to track down a device that was hacked so that
///     the user knows which physical location might have given an attacker access. Should be an opt-in from the user.
/// </param>
/// <remarks>
///     The <see cref="UserId" /> allows the server to identify the user that authored the event, the
///     <see cref="Session" /> allows everyone to distinguish between various devices and applications without knowing
///     who-is-who. Both <see cref="Application" /> and <see cref="Device" /> are for diagnostic purposes.
/// </remarks>
public record Author(
    UserId UserId,
    SessionInfo Session,
    ApplicationInfo? Application,
    DeviceInfo? Device);

/// <summary>The user</summary>
/// <param name="Value">The value of that id</param>
/// <remarks>Type exists so that we don't use confuse the ids of one type of object with another type of object.</remarks>
public record UserId(Guid Value);

/// <summary>
///     A session is a single connection to the server which can be used to identify somebody entering information. This
///     allows users to identify the device they are using in the event they use multiple devices at the same time to
///     author the same set (no idea, why anyone would do that, but lets cover this use case anyway)
/// </summary>
/// <param name="DisplayName">The name that should be displayed for the user</param>
/// <param name="PublicKey">
///     A random value generated by the client and send to the server when it connects including a private key (this is NOT
///     related to signing, but also a shared public private key).
///     The server will then remember both values and only allow connection using the same public key when a private key
///     can be provided. The private key will be marked invalid 48 hours after the last message (to prevent collisions and
///     exhaustion). Meaning: A session is automatically invalidated after 48 hours of inactivity.
/// </param>
/// <remarks>
///     Before I wanted to allow the server determine the public/private part and invalidate as soon as connection
///     drops, but since a client might not always have a stable connection that would result in constant new sessions from
///     a logical view point. And although true from a physical perspective this is not something we want the users to be
///     bothered by
/// </remarks>
public record SessionInfo(
    string DisplayName,
    string PublicKey
);

/// <summary>
///     The device that is used by a user. This value is important to identify the device that is used by a user and in the
///     event a key is leaked.
/// </summary>
/// <param name="Id">
///     A unique id of the device, preferably generated the very first time the application is installed which
///     does not change between updates. Do not derive this from the NIC!
/// </param>
/// <param name="DisplayName">
///     How the device should be displayed for example: "Phone", "Tablet" or "Scoreboard table 22".
///     Do not use the name of the device itself as it can contain personal information. For example "iPhone of John Doe"
///     is not a good idea.
/// </param>
public record DeviceInfo(Guid Id, string? DisplayName);

/// <summary>Describes the application that is used to send events to the server </summary>
/// <param name="Name">The name of the application</param>
/// <param name="Version">The version of the application, test-builds can leave this <c>null</c></param>
/// <param name="Url">The url to the homepage of the application</param>
public record ApplicationInfo(string Name, string? Version, string? Url);